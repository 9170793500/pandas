

# from openpyxl import load_workbook
# from openpyxl.styles import PatternFill
# import pandas as pd
# import math as m
# import smtplib
# from email.message import EmailMessage
# from sqlalchemy import create_engine

# df = pd.read_csv('master.csv', header=None)
# columns = [3, 9]
# data = df.iloc[:, columns]

# ceiled_pulse = df.iloc[:, 13].astype(float).apply(lambda x: m.ceil(x) // 15)

# Equle_data = pd.concat([data, ceiled_pulse], axis=1)
# Equle_data.columns = ['User', 'Date', 'Pulse']

# df = pd.DataFrame(Equle_data)

# df['Date'] = pd.to_datetime(df['Date'])
# df['Date'] = df['Date'].dt.date

# Equle_data.insert(0, 'id', range(1, len(Equle_data) + 1))
# grouped = df.groupby(['User', 'Date'])['Pulse'].sum().reset_index()
# grouped.columns = ['User','Date', 'Total_Pulse']


# print(grouped.head())

# grouped.to_excel("sum_by_date.xlsx", sheet_name="Sum_By_Date", index=False)

# # database connection
# database_uri = 'mysql+pymysql://root:@localhost/s'
# engine = create_engine(database_uri)
# query = "SELECT * FROM excel"
# try:
#   grouped.to_sql(name='excel', con=engine, if_exists='replace', index=False)
#   print("succes")  
# except:
#     print("not") 



# excel_file = "sum_by_date.xlsx"
# df = pd.read_excel(excel_file)

# columns_to_color = {'Date': 'blue', 'Total_Pulse': 'green'}  # Specify columns and their respective colors
# data_text = df.to_html(index=False, border=1, escape=True)

# for column, color in columns_to_color.items():
#     # Apply color to the header cells of the respective columns
  
#     data_text = data_text.replace(f'<th>{column}</th>', f'<th style="background-color: {color}; color: white;">{column}</th>')

#     # Apply color to all cells of the respective column using a class or unique identifier
#     data_text = data_text.replace(f'<td>{column}</td>', f'<td class="{column}_class" style="background-color: {color}; color: white;">{column}</td>')


# # Email body template
# subject = "This is a check mail"
# body_template = f'''
# Hello,
# Sir, work is complete.

# This is the data you requested:<br><br>

# {data_text}<br><br>

# Regards,
# Sundram Maurya
# '''

# # Email composition with HTML body
# msg = EmailMessage()
# msg['From'] = 'sundrammaurya1996@gmail.com'
# msg['To'] = 'mauryasundram1996@gmail.com'
# msg['Subject'] = subject
# msg.add_alternative(body_template, subtype='html')

# server = smtplib.SMTP('smtp.gmail.com', 587)
# # Login  account email and password
# server.starttls()
# server.login('sundrammaurya1996@gmail.com', 'okua lodv qjve oszg')  # Update with your password

# with open("sum_by_date.xlsx", 'rb') as file:
#     file_data = file.read()
#     msg.add_attachment(file_data, maintype='application', subtype='octet-stream', filename='sum_by_date.xlsx')

# server.send_message(msg)
# server.quit()





import pandas as pd

files = ['file1.csv', 'file2.csv', 'file3.csv', 'file4.csv']  


sdm = []

for file in files:
    df = pd.read_csv(file, header=0)
    
    sdm.append(df)

merged_df = pd.concat(sdm)

merged_df.to_excel("merged_daa.xlsx", sheet_name="Merged_Data", index=False)
# merged_df.to_excel("merged_a.xlsx", sheet_name="Merged_Data", index=False)
print(merged_df.info())




# Reading data from the Excel file
excel_file = "sum_by_date.xlsx"
sdm = pd.read_excel(excel_file)
df = pd.DataFrame(sdm)

# Function to generate HTML table with different colors for specific columns
def table(df):
    colors = {
        'Date': 'red',
        'Total_Pulse': 'orange' 
       
    }
    html_table = '<table style="border: 1px solid black; border-collapse: collapse;"><thead><tr>'
    
    # Add table headers with specified colors
    for col in df.columns:
        html_table += f'<th style="padding: 5px; background-color: {colors.get(col, "white")}">{col}</th>'
    
    html_table += '</tr></thead><tbody>'
    
    # Add table rows with data and color each cell based on the column
    for index, row in df.iterrows():
        html_table += '<tr>'
        for col in df.columns:
            html_table += f'<td style="padding: 5px; background-color: {colors.get(col, "white")}">{row[col]}</td>'
        html_table += '</tr>'
    
    html_table += '</tbody></table>'
    return html_table

data_html = table(df)

subject = "This is a check mail"
body_template = f"""
<html>
<head>
<style> 
  table, th, td {{ border: 1px solid black; border-collapse: collapse; }}
  th, td {{ padding: 5px; }}
</style>
</head>

<body>
{data_html}
<br>
Regards,
Sundram Maurya
</body>
</html>
"""
